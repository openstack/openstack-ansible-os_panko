---
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Verbosity Options
debug: False

#python venv executable
panko_venv_python_executable: "{{ openstack_venv_python_executable | default('python2') }}"

# Set the host which will execute the shade modules
# for the service setup. The host must already have
# clouds.yaml properly configured.
panko_service_setup_host: "{{ openstack_service_setup_host | default('localhost') }}"
panko_service_setup_host_python_interpreter: "{{ openstack_service_setup_host_python_interpreter | default((panko_service_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_python['executable'])) }}"

# Set the package install state for distribution and pip packages
# Options are 'present' and 'latest'
panko_package_state: "latest"
panko_pip_package_state: "latest"

## The git source/branch
panko_git_repo: https://opendev.org/openstack/panko
panko_git_install_branch: master

## The packages to build from source
panko_upper_constraints_url: "{{ requirements_git_url | default('https://releases.openstack.org/constraints/upper/' ~ requirements_git_install_branch | default('master')) }}"
panko_git_constraints:
  - "git+{{ panko_git_repo }}@{{ panko_git_install_branch }}#egg=panko"
  - "--constraint {{ panko_upper_constraints_url }}"

panko_pip_install_args: "{{ pip_install_options | default('') }}"

# Name of the virtual env to deploy into
panko_venv_tag: "{{ venv_tag | default('untagged') }}"
panko_bin: "/openstack/venvs/panko-{{ panko_venv_tag }}/bin"

## System info
panko_system_user_name: panko
panko_system_group_name: panko
panko_system_shell: /bin/false
panko_system_comment: panko system user
panko_system_user_home: "/var/lib/{{ panko_system_user_name }}"

## DB info
panko_db_setup_host: "{{ ('galera_all' in groups) | ternary(groups['galera_all'][0], 'localhost') }}"
panko_database_name: panko
panko_database_user: panko
panko_db_type: "mysql+pymysql"
panko_db_address: "{{ galera_address | default('127.0.0.1') }}"
panko_connection_string: "{{ panko_db_type }}://{{ panko_database_user }}:{{ panko_container_db_password }}@{{ panko_db_address }}/{{ panko_database_name }}?charset=utf8"


## uWSGI setup
panko_api_init_overrides: {}
panko_wsgi_threads: 10
panko_wsgi_processes_max: 16
panko_wsgi_processes: "{{ [[ansible_processor_vcpus|default(1), 1] | max * 2, panko_wsgi_processes_max] | min }}"

#panko services info
panko_role_name: admin

## Service Type and Data
panko_service_region: RegionOne
panko_service_endpoint_type: internalURL
panko_service_name: panko
panko_service_address: "{{ openstack_service_bind_address | default('0.0.0.0') }}"
panko_service_port: 8777
panko_service_proto: http
panko_service_type: event
panko_service_description: "Openstack Panko Service"
panko_service_project_domain_id: default
panko_service_user_domain_id: default
panko_service_user_name: panko
panko_keystone_auth_plugin: "{{ panko_keystone_auth_type }}"
panko_keystone_auth_type: password
panko_service_tenant_name: service
panko_service_project_name: service
panko_service_publicuri: "{{ panko_service_proto }}://{{ external_lb_vip_address }}:{{ panko_service_port }}"
panko_service_publicurl: "{{ panko_service_publicuri }}"
panko_service_internaluri: "{{ panko_service_proto }}://{{ internal_lb_vip_address }}:{{ panko_service_port }}"
panko_service_internalurl: "{{ panko_service_internaluri }}"
panko_service_adminuri: "{{ panko_service_proto }}://{{ internal_lb_vip_address }}:{{ panko_service_port }}"
panko_service_adminurl: "{{ panko_service_adminuri }}"

panko_service_in_ldap: false

# Panko expirer
# TTL in seconds
panko_event_time_to_live: -1
# Any of the following special times are valid:
#   reboot, yearly, annually, monthly, weekly, daily, hourly
panko_expirer_job_time: daily

panko_services:
  panko-api:
    group: "panko_api"
    service_name: "panko-api"
    service_enabled: true
    config_overrides: "{{ panko_api_init_overrides }}"
    wsgi_app: True
    wsgi_path: "{{  panko_bin | dirname }}/panko-api"
    uwsgi_overrides: "{{ panko_uwsgi_conf_overrides }}"
    uwsgi_port: "{{ panko_service_port }}"
    uwsgi_bind_address: "{{ panko_service_address }}"

# Common pip packages
panko_pip_packages:
  - alembic>=0.7.2
  - ceilometermiddleware
  - cryptography
  - gnocchiclient
  - osprofiler
  - panko
  - PyMySQL>=0.6.2
  - pymemcache
  - python-memcached
  - sqlalchemy>=0.9.7
  - sqlalchemy-utils
  - systemd-python
  - warlock

# Memcached override
panko_memcached_servers: "{{ memcached_servers }}"

panko_required_secrets:
  - memcached_encryption_key
  - panko_container_db_password
  - panko_service_password

install_test_packages: False

# This variable is used by the repo_build process to determine
# which host group to check for members of before building the
# pip packages required by this role. The value is picked up
# by the py_pkgs lookup.
panko_role_project_group: panko_all

## Tunable overrides
panko_policy_overrides: {}
panko_panko_conf_overrides: {}
panko_api_paste_ini_overrides: {}
panko_uwsgi_conf_overrides: {}
