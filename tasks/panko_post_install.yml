---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Copy panko config
  config_template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ panko_system_user_name }}"
    group: "{{ panko_system_group_name }}"
    mode: "0644"
    config_overrides: "{{ item.config_overrides }}"
    config_type: "{{ item.config_type }}"
  with_items:
    - src: "panko.conf.j2"
      dest: "/etc/panko/panko.conf"
      config_overrides: "{{ panko_panko_conf_overrides }}"
      config_type: "ini"
    - src: "api_paste.ini.j2"
      dest: "/etc/panko/api_paste.ini"
      config_overrides: "{{ panko_api_paste_ini_overrides }}"
      config_type: "ini"
    - src: "policy.json.j2"
      dest: "/etc/panko/policy.json-{{ panko_venv_tag }}"
      config_overrides: "{{ panko_policy_overrides }}"
      config_type: "json"
  notify:
    - Restart panko services

- name: Configurng uWSGI
  block:
    - name: Ensure uWSGI directory exists
      file:
        path: "/etc/uwsgi/"
        state: directory
        mode: "0711"
    - name: Apply uWSGI configuration
      config_template:
        src: "panko-uwsgi.ini.j2"
        dest: "/etc/uwsgi/panko-api.ini"
        mode: "0644"
        config_overrides: "{{ panko_uwsgi_conf_overrides }}"
        config_type: ini
      notify:
        - Restart panko services
  when: "'panko_api' in group_names"

# NOTE(noonedeadpunk): This task is created due to migration from apache to uwsgi
# which was introduced during train release. It can be dropped afterwards.
- name: Drop Apache related configs
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ panko_apache_config }}"
  notify:
   - Restart web server

- name: Stop Apache listening on Panko port
  lineinfile:
    path: "{{ panko_apache_ports }}"
    state: absent
    line: "Listen {{ panko_service_port }}"
  notify:
   - Restart web server

- name: Create cron job for panko event expirer
  cron:
    name: "Purge old panko events"
    user: "{{ panko_system_user_name }}"
    specialtime: "{{ panko_expirer_job_time }}"
    job: "{{ panko_bin }}/panko-expirer"
  when:
    - inventory_hostname == groups['panko_all'][0]
    - panko_event_time_to_live > 0
